name: 6-Add-VM-Extension
on: workflow_dispatch

jobs:
  build:
    name: 6-Add-VM-Extension
    runs-on: windows-2022
    steps:
    # Authentication: log on to Azure with the AZURE_AVD_SP secret
    - name: Login via Az module
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_AVD_SP}}
        enable-AzPSSession: true 
    
    # Azure PowerShell: Run inline script    
    - name: Run Azure PowerShell script (inline)
      uses: azure/powershell@v1
      with:
        inlineScript: |
          # Read the environment variables in PowerShell
          $Tags = @{"Environment"="PRD"}
          $CustomerPrefix = "Ucorp"
          $HostPoolName = "$CustomerPrefix-Standard-Pool"
          $ResourceGroup = "$CustomerPrefix-Logging-RG"
          $VaultName = "$CustomerPrefix-AVD-KV"
          $FileUri = @("https://raw.githubusercontent.com/iuenk/AVD/main/PSScripts/Virtual-Desktop-Optimalization-Tool-20H2.ps1")
          $Settings = @{"fileUris" = $FileUri};
          $OptimalizationPack = @{"commandToExecute" = "powershell -ExecutionPolicy Unrestricted -File Virtual-Desktop-Optimalization-Tool-20H2.ps1"};

          $secureDomainName = (Get-AzKeyVaultSecret -VaultName $VaultName -Name domainname).SecretValue
          $domainName = [System.Runtime.InteropServices.Marshal]::PtrToStringAuto($([System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($secureDomainName)))

          # Retrieve the given Host Pool information
          $hostPool = Get-AzWvdHostPool -SubscriptionId ${{secrets.AZURE_SUBSCRIPTIONID}} | Where {$_.Name -eq $HostPoolName}
          $hostpoolRG = $hostPool.Id.Split("/")[4]
          $hostpoolName = $hostPool.Id.Split("/")[-1]

          # Since there is no direct Cmdlet to fetch the create date, it is considered the disk create date as VM create date
          $VMs = @()        
          $Date = Get-Date -Format "dd/MM/yyyy"
          $VMObject = Get-AzVM -ResourceGroupName $hostpoolRG

          foreach ($VM in $VMObject){
            $VMDiskName = $VM.StorageProfile.OsDisk.Name
            $VMDiskInfo = Get-AzDisk -ResourceGroupName $VM.ResourceGroupName -DiskName $VMDiskName
            $VMCreatedDate = $VMDiskInfo.TimeCreated
            $VMCreatedDate = $VMCreatedDate.Date.ToString("dd/MM/yyyy")
            $SessionHost = $VM.Name+".$DomainName"
        
            # Add result to the output array
            $VMs += New-Object -TypeName psobject -Property @{
                ResourceGroup = $VM.ResourceGroupName
                VMName = $VM.Name
                CreateDate = $VMCreatedDate
                SessionHost = $SessionHost
            }

            If($Date -eq $VMCreatedDate){
              Write-Output "$($VM.VMName) is created today start installing extensions" 
            else {
              Write-Output "$($VM.VMName) is not created today"
            }
          }

        azPSVersion: 'latest'
